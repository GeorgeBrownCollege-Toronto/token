{
  "contractName": "RelevantTokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_sig",
          "type": "bytes"
        }
      ],
      "name": "claimTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "name": "allocateRewards",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initRoundReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_version",
          "type": "string"
        },
        {
          "name": "_devFundAddress",
          "type": "address"
        },
        {
          "name": "_initRoundReward",
          "type": "uint256"
        },
        {
          "name": "_timeConstant",
          "type": "uint256"
        },
        {
          "name": "_targetInflation",
          "type": "uint256"
        },
        {
          "name": "_targetRound",
          "type": "uint256"
        },
        {
          "name": "_roundLength",
          "type": "uint256"
        },
        {
          "name": "_roundDecay",
          "type": "uint256"
        },
        {
          "name": "_totalPremint",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeConstant",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "roundsSincleLast",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "roundDecay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetInflation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allocatedRewards",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "developmentFund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "roundLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "partialSum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currRoundReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "releaseTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "devFundAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "name": "allocateAirdrops",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastRoundReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalPremint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "nonceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardFund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allocatedAirdrops",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "airdropFund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "releasableTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rewardFund",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "airdropFund",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "developmentFund",
          "type": "uint256"
        }
      ],
      "name": "Released",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "roundNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_roundNum",
          "type": "uint256"
        }
      ],
      "name": "setRoundNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_roundNum",
          "type": "uint256"
        },
        {
          "name": "_lastRoundReward",
          "type": "uint256"
        },
        {
          "name": "_totalReleased",
          "type": "uint256"
        }
      ],
      "name": "setLastRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "emptyDevBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50614033806100206000396000f3fe60806040526004361061027d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610282578063095ea7b314610312578063119b22b31461038557806314d8bbf1146103b05780631727bcc71461049a57806318160ddd146104c557806323b872dd146104f057806328fc33c71461058357806329a0f85b146105d6578063313ce567146106015780633180bfe114610632578063395093511461089c57806340c10f191461090f57806343568eae1461098257806348cd4cb1146109ad5780634cf9b9aa146109d85780634e33946114610a0357806354fd4d5014610a66578063672ff5d414610af657806370a0823114610b21578063715018a614610b865780637581d1d114610b9d5780637d556df014610bc857806382bc07e614610bf35780638a19c8bc14610c1e5780638a2381d714610c495780638b649b9414610c745780638da5cb5b14610c9f5780638f32d59b14610cf657806395d89b4114610d255780639701fa3414610db5578063983b2d5614610e045780639865027514610e55578063a457c2d714610e6c578063a59efddd14610edf578063a9059cbb14610f0a578063a96f866814610f7d578063aa271e1a14610fac578063b480f6ad14611015578063b7f92b711461106c578063c4d66de814611097578063ca6da57e146110e8578063d75683241461113b578063dd62ed3e14611166578063de70289e146111eb578063dea95ff814611216578063e33b7de314611265578063e5f2e38314611290578063ed2a2d64146112a7578063efe222661461130c578063f2fde38b14611337578063f73c139014611388578063fd6a93fb146113b3575b600080fd5b34801561028e57600080fd5b506102976113de565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d75780820151818401526020810190506102bc565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031e57600080fd5b5061036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061147d565b604051808215151515815260200191505060405180910390f35b34801561039157600080fd5b5061039a6115aa565b6040518082815260200191505060405180910390f35b3480156103bc57600080fd5b50610480600480360360408110156103d357600080fd5b8101908080359060200190929190803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115b5565b604051808215151515815260200191505060405180910390f35b3480156104a657600080fd5b506104af611952565b6040518082815260200191505060405180910390f35b3480156104d157600080fd5b506104da611959565b6040518082815260200191505060405180910390f35b3480156104fc57600080fd5b506105696004803603606081101561051357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611963565b604051808215151515815260200191505060405180910390f35b34801561058f57600080fd5b506105bc600480360360208110156105a657600080fd5b8101908080359060200190929190505050611b6b565b604051808215151515815260200191505060405180910390f35b3480156105e257600080fd5b506105eb611c64565b6040518082815260200191505060405180910390f35b34801561060d57600080fd5b50610616611c6b565b604051808260ff1660ff16815260200191505060405180910390f35b34801561063e57600080fd5b5061089a600480360361018081101561065657600080fd5b810190808035906020019064010000000081111561067357600080fd5b82018360208201111561068557600080fd5b803590602001918460018302840111640100000000831117156106a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291908035906020019064010000000081111561071757600080fd5b82018360208201111561072957600080fd5b8035906020019184600183028401116401000000008311171561074b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107ae57600080fd5b8201836020820111156107c057600080fd5b803590602001918460018302840111640100000000831117156107e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611c7f565b005b3480156108a857600080fd5b506108f5600480360360408110156108bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ee1565b604051808215151515815260200191505060405180910390f35b34801561091b57600080fd5b506109686004803603604081101561093257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612118565b604051808215151515815260200191505060405180910390f35b34801561098e57600080fd5b50610997612142565b6040518082815260200191505060405180910390f35b3480156109b957600080fd5b506109c2612149565b6040518082815260200191505060405180910390f35b3480156109e457600080fd5b506109ed612150565b6040518082815260200191505060405180910390f35b348015610a0f57600080fd5b50610a5060048036036060811015610a2657600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050612164565b6040518082815260200191505060405180910390f35b348015610a7257600080fd5b50610a7b6122c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610abb578082015181840152602081019050610aa0565b50505050905090810190601f168015610ae85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b0257600080fd5b50610b0b612367565b6040518082815260200191505060405180910390f35b348015610b2d57600080fd5b50610b7060048036036020811015610b4457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061236e565b6040518082815260200191505060405180910390f35b348015610b9257600080fd5b50610b9b6123b7565b005b348015610ba957600080fd5b50610bb261248b565b6040518082815260200191505060405180910390f35b348015610bd457600080fd5b50610bdd612492565b6040518082815260200191505060405180910390f35b348015610bff57600080fd5b50610c08612499565b6040518082815260200191505060405180910390f35b348015610c2a57600080fd5b50610c336124a0565b6040518082815260200191505060405180910390f35b348015610c5557600080fd5b50610c5e6124a7565b6040518082815260200191505060405180910390f35b348015610c8057600080fd5b50610c896124ae565b6040518082815260200191505060405180910390f35b348015610cab57600080fd5b50610cb46124b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d0257600080fd5b50610d0b6124df565b604051808215151515815260200191505060405180910390f35b348015610d3157600080fd5b50610d3a612537565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d7a578082015181840152602081019050610d5f565b50505050905090810190601f168015610da75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610dc157600080fd5b50610dee60048036036020811015610dd857600080fd5b81019080803590602001909291905050506125d6565b6040518082815260200191505060405180910390f35b348015610e1057600080fd5b50610e5360048036036020811015610e2757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125dd565b005b348015610e6157600080fd5b50610e6a6125fd565b005b348015610e7857600080fd5b50610ec560048036036040811015610e8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612608565b604051808215151515815260200191505060405180910390f35b348015610eeb57600080fd5b50610ef461283f565b6040518082815260200191505060405180910390f35b348015610f1657600080fd5b50610f6360048036036040811015610f2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612846565b604051808215151515815260200191505060405180910390f35b348015610f8957600080fd5b50610f9261285d565b604051808215151515815260200191505060405180910390f35b348015610fb857600080fd5b50610ffb60048036036020811015610fcf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a25565b604051808215151515815260200191505060405180910390f35b34801561102157600080fd5b5061102a612a42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561107857600080fd5b50611081612a69565b6040518082815260200191505060405180910390f35b3480156110a357600080fd5b506110e6600480360360208110156110ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a70565b005b3480156110f457600080fd5b506111216004803603602081101561110b57600080fd5b8101908080359060200190929190505050612baf565b604051808215151515815260200191505060405180910390f35b34801561114757600080fd5b50611150612ca8565b6040518082815260200191505060405180910390f35b34801561117257600080fd5b506111d56004803603604081101561118957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612caf565b6040518082815260200191505060405180910390f35b3480156111f757600080fd5b50611200612d36565b6040518082815260200191505060405180910390f35b34801561122257600080fd5b5061124f6004803603602081101561123957600080fd5b8101908080359060200190929190505050612d3d565b6040518082815260200191505060405180910390f35b34801561127157600080fd5b5061127a612d52565b6040518082815260200191505060405180910390f35b34801561129c57600080fd5b506112a5612d59565b005b3480156112b357600080fd5b506112f6600480360360208110156112ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ec4565b6040518082815260200191505060405180910390f35b34801561131857600080fd5b50611321612f0e565b6040518082815260200191505060405180910390f35b34801561134357600080fd5b506113866004803603602081101561135a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f15565b005b34801561139457600080fd5b5061139d612f34565b6040518082815260200191505060405180910390f35b3480156113bf57600080fd5b506113c8612f3b565b6040518082815260200191505060405180910390f35b6101008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114755780601f1061144a57610100808354040283529160200191611475565b820191906000526020600020905b81548152906001019060200180831161145857829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114ba57600080fd5b81603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600061010d54905090565b60008261011654101515156115c957600080fd5b6000833361011860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040528051906020012090508060405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182815260200191505060405160208183030381529060405280519060200120905060006116dc8285612f42565b90508073ffffffffffffffffffffffffffffffffffffffff166116fd6124b5565b73ffffffffffffffffffffffffffffffffffffffff16141515611788576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436c61696d206e6f7420617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b600161011860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506117ed856101165461302690919063ffffffff16565b610116819055503073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561189757600080fd5b505af11580156118ab573d6000803e3d6000fd5b505050506040513d60208110156118c157600080fd5b81019080805190602001909291905050501515611946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5472616e7366657220746f20636c61696d616e74206661696c6564000000000081525060200191505060405180910390fd5b60019250505092915050565b6101095481565b6000603554905090565b60006119f482603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a7f848484613048565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000611b756124df565b1515611b8057600080fd5b610112548211151515611c21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4e6f7420656e6f756768206375726174696f6e2072657761726473206176616981526020017f6c61626c6500000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611c37826101125461302690919063ffffffff16565b61011281905550611c54826101165461321890919063ffffffff16565b6101168190555060019050919050565b6101055481565b61010160009054906101000a900460ff1681565b600060019054906101000a900460ff1680611c9e5750611c9d613239565b5b80611cb557506000809054906101000a900460ff16155b1515611d4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611da03361324a565b611da933612a70565b8c6101009080519060200190611dc0929190613f62565b508b61010160006101000a81548160ff021916908360ff1602179055508a6101029080519060200190611df4929190613f62565b50896101039080519060200190611e0c929190613f62565b508861010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087610105819055508661010781905550856101088190555084610109819055508361010a819055508261010b819055504361010e819055506101055461010681905550600061010f8190555061010554610110819055508161010c81905550611eb78261343e565b5080600060016101000a81548160ff02191690831515021790555050505050505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f1e57600080fd5b611fad82603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061212333612a25565b151561212e57600080fd5b6121388383613454565b6001905092915050565b6101075481565b61010e5481565b600061010f5461215e6115aa565b03905090565b600061216e6124df565b151561217957600080fd5b61010d5484101515612219576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4c6173742072656c65617365206d757374206265206265666f7265206375727281526020017f656e7420726f756e64000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8361010f8190555082610110819055508161011181905550612258600f61224a6004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b61011281905550612286600f6122786004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b610113819055506122b4600f6122a66004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b6101148190555061010f5490509392505050565b6101038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235f5780601f106123345761010080835404028352916020019161235f565b820191906000526020600020905b81548152906001019060200180831161234257829003601f168201915b505050505081565b61010b5481565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6123bf6124df565b15156123ca57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6101085481565b6101165481565b61010f5481565b61010d5481565b6101155481565b61010a5481565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125ce5780601f106125a3576101008083540402835291602001916125ce565b820191906000526020600020905b8154815290600101906020018083116125b157829003601f168201915b505050505081565b6000919050565b6125e633612a25565b15156125f157600080fd5b6125fa81613612565b50565b6126063361366c565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561264557600080fd5b6126d482603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6101065481565b6000612853338484613048565b6001905092915050565b600080600061286a6115aa565b90508061010f541015156128e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f206e6577207265776172647320617661696c61626c65000000000000000081525060200191505060405180910390fd5b60006128fe61010f548361302690919063ffffffff16565b90506101095461010f5410151561293457600061011154905061292181836136c6565b935061292d3085612118565b505061298c565b6101095482101561294f5761294881613762565b925061298b565b6000612959613811565b9050600061296684613836565b905061297b818361321890919063ffffffff16565b94506129873082612118565b5050505b5b61299583613885565b61299d613974565b508161010f819055506129bc836101115461321890919063ffffffff16565b610111819055507f39c15e2884a29a8ddf54563c3cb131c46f3667ecc29b194be9f5cf91b2879725836101125461011354610115546040518085815260200184815260200183815260200182815260200194505050505060405180910390a16001935050505090565b6000612a3b82609b613b2490919063ffffffff16565b9050919050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101145481565b600060019054906101000a900460ff1680612a8f5750612a8e613239565b5b80612aa657506000809054906101000a900460ff16155b1515612b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612b9182613bb8565b80600060016101000a81548160ff0219169083151502179055505050565b6000612bb96124df565b1515612bc457600080fd5b610113548211151515612c65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4e6f7420656e6f7567682061697264726f70207265776172647320617661696c81526020017f61626c650000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612c7b826101135461302690919063ffffffff16565b61011381905550612c98826101175461321890919063ffffffff16565b6101178190555060019050919050565b6101105481565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61010c5481565b60008161010d8190555061010d549050919050565b6101115481565b6000612d8761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661236e565b90503073ffffffffffffffffffffffffffffffffffffffff166323b872dd61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610123846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612e8557600080fd5b505af1158015612e99573d6000803e3d6000fd5b505050506040513d6020811015612eaf57600080fd5b81019080805190602001909291905050505050565b600061011860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101125481565b612f1d6124df565b1515612f2857600080fd5b612f3181613d07565b50565b6101175481565b6101135481565b60008060008060418551141515612f5f5760009350505050613020565b6020850151925060408501519150606085015160001a9050601b8160ff161015612f8a57601b810190505b601b8160ff1614158015612fa25750601c8160ff1614155b15612fb35760009350505050613020565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613010573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600082821115151561303757600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561308457600080fd5b6130d681603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061316b81603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561322f57600080fd5b8091505092915050565b600080303b90506000811491505090565b600060019054906101000a900460ff16806132695750613268613239565b5b8061328057506000809054906101000a900460ff16155b151561331a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b600061344a3083612118565b5060019050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561349057600080fd5b6134a58160355461321890919063ffffffff16565b6035819055506134fd81603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808314156135bd57600090506135e2565b600082840290508284828115156135d057fe5b041415156135dd57600080fd5b809150505b92915050565b600080821115156135f857600080fd5b6000828481151561360557fe5b0490508091505092915050565b61362681609b613e0390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61368081609b613eb390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600080839050600080600090505b8481101561375657600061371c61010160009054906101000a900460ff1660ff16600a0a61370e86610108546135aa90919063ffffffff16565b6135e890919063ffffffff16565b9050613731818461321890919063ffffffff16565b9250613746818561321890919063ffffffff16565b93505080806001019150506136d4565b50809250505092915050565b600080600061010f541415613778576101055490505b620186a083101561380757600080600090505b84811015613800576137d461010160009054906101000a900460ff1660ff16600a0a6137c66101105461010b546135aa90919063ffffffff16565b6135e890919063ffffffff16565b91506137e9828461321890919063ffffffff16565b92508161011081905550808060010191505061378b565b5050613808565b5b80915050919050565b60008061382d6101115461010c5461302690919063ffffffff16565b90508091505090565b60008061010c549050600061386a600161385c610109548761302690919063ffffffff16565b61321890919063ffffffff16565b9050600061387883836136c6565b9050809350505050919050565b60006138ae60056138a06004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b90506138d96138c76003836135e890919063ffffffff16565b6101135461321890919063ffffffff16565b610113819055506139096138f76003836135e890919063ffffffff16565b6101125461321890919063ffffffff16565b610112819055506139396139276003836135e890919063ffffffff16565b6101145461321890919063ffffffff16565b610114819055506139696139576005846135e890919063ffffffff16565b6101155461321890919063ffffffff16565b610115819055505050565b60003073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610115546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613a3f57600080fd5b505af1158015613a53573d6000803e3d6000fd5b505050506040513d6020811015613a6957600080fd5b81019080805190602001909291905050501515613b14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5472616e7366657220746f2064657646756e6441646472657373206661696c6581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000610115819055506001905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515613b6157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600060019054906101000a900460ff1680613bd75750613bd6613239565b5b80613bee57506000809054906101000a900460ff16155b1515613c88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550613cd982612a25565b1515613ce957613ce882613612565b5b80600060016101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613d4357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613e3f57600080fd5b613e498282613b24565b151515613e5557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613eef57600080fd5b613ef98282613b24565b1515613f0457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613fa357805160ff1916838001178555613fd1565b82800160010185558215613fd1579182015b82811115613fd0578251825591602001919060010190613fb5565b5b509050613fde9190613fe2565b5090565b61400491905b80821115614000576000816000905550600101613fe8565b5090565b9056fea165627a7a72305820e06fd20792807dc4f8cb2b590b4242180733a92b8647f498d66dd373ed1d93450029",
  "deployedBytecode": "0x60806040526004361061027d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610282578063095ea7b314610312578063119b22b31461038557806314d8bbf1146103b05780631727bcc71461049a57806318160ddd146104c557806323b872dd146104f057806328fc33c71461058357806329a0f85b146105d6578063313ce567146106015780633180bfe114610632578063395093511461089c57806340c10f191461090f57806343568eae1461098257806348cd4cb1146109ad5780634cf9b9aa146109d85780634e33946114610a0357806354fd4d5014610a66578063672ff5d414610af657806370a0823114610b21578063715018a614610b865780637581d1d114610b9d5780637d556df014610bc857806382bc07e614610bf35780638a19c8bc14610c1e5780638a2381d714610c495780638b649b9414610c745780638da5cb5b14610c9f5780638f32d59b14610cf657806395d89b4114610d255780639701fa3414610db5578063983b2d5614610e045780639865027514610e55578063a457c2d714610e6c578063a59efddd14610edf578063a9059cbb14610f0a578063a96f866814610f7d578063aa271e1a14610fac578063b480f6ad14611015578063b7f92b711461106c578063c4d66de814611097578063ca6da57e146110e8578063d75683241461113b578063dd62ed3e14611166578063de70289e146111eb578063dea95ff814611216578063e33b7de314611265578063e5f2e38314611290578063ed2a2d64146112a7578063efe222661461130c578063f2fde38b14611337578063f73c139014611388578063fd6a93fb146113b3575b600080fd5b34801561028e57600080fd5b506102976113de565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d75780820151818401526020810190506102bc565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031e57600080fd5b5061036b6004803603604081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061147d565b604051808215151515815260200191505060405180910390f35b34801561039157600080fd5b5061039a6115aa565b6040518082815260200191505060405180910390f35b3480156103bc57600080fd5b50610480600480360360408110156103d357600080fd5b8101908080359060200190929190803590602001906401000000008111156103fa57600080fd5b82018360208201111561040c57600080fd5b8035906020019184600183028401116401000000008311171561042e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506115b5565b604051808215151515815260200191505060405180910390f35b3480156104a657600080fd5b506104af611952565b6040518082815260200191505060405180910390f35b3480156104d157600080fd5b506104da611959565b6040518082815260200191505060405180910390f35b3480156104fc57600080fd5b506105696004803603606081101561051357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611963565b604051808215151515815260200191505060405180910390f35b34801561058f57600080fd5b506105bc600480360360208110156105a657600080fd5b8101908080359060200190929190505050611b6b565b604051808215151515815260200191505060405180910390f35b3480156105e257600080fd5b506105eb611c64565b6040518082815260200191505060405180910390f35b34801561060d57600080fd5b50610616611c6b565b604051808260ff1660ff16815260200191505060405180910390f35b34801561063e57600080fd5b5061089a600480360361018081101561065657600080fd5b810190808035906020019064010000000081111561067357600080fd5b82018360208201111561068557600080fd5b803590602001918460018302840111640100000000831117156106a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff1690602001909291908035906020019064010000000081111561071757600080fd5b82018360208201111561072957600080fd5b8035906020019184600183028401116401000000008311171561074b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107ae57600080fd5b8201836020820111156107c057600080fd5b803590602001918460018302840111640100000000831117156107e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611c7f565b005b3480156108a857600080fd5b506108f5600480360360408110156108bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ee1565b604051808215151515815260200191505060405180910390f35b34801561091b57600080fd5b506109686004803603604081101561093257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612118565b604051808215151515815260200191505060405180910390f35b34801561098e57600080fd5b50610997612142565b6040518082815260200191505060405180910390f35b3480156109b957600080fd5b506109c2612149565b6040518082815260200191505060405180910390f35b3480156109e457600080fd5b506109ed612150565b6040518082815260200191505060405180910390f35b348015610a0f57600080fd5b50610a5060048036036060811015610a2657600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050612164565b6040518082815260200191505060405180910390f35b348015610a7257600080fd5b50610a7b6122c8565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610abb578082015181840152602081019050610aa0565b50505050905090810190601f168015610ae85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b0257600080fd5b50610b0b612367565b6040518082815260200191505060405180910390f35b348015610b2d57600080fd5b50610b7060048036036020811015610b4457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061236e565b6040518082815260200191505060405180910390f35b348015610b9257600080fd5b50610b9b6123b7565b005b348015610ba957600080fd5b50610bb261248b565b6040518082815260200191505060405180910390f35b348015610bd457600080fd5b50610bdd612492565b6040518082815260200191505060405180910390f35b348015610bff57600080fd5b50610c08612499565b6040518082815260200191505060405180910390f35b348015610c2a57600080fd5b50610c336124a0565b6040518082815260200191505060405180910390f35b348015610c5557600080fd5b50610c5e6124a7565b6040518082815260200191505060405180910390f35b348015610c8057600080fd5b50610c896124ae565b6040518082815260200191505060405180910390f35b348015610cab57600080fd5b50610cb46124b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d0257600080fd5b50610d0b6124df565b604051808215151515815260200191505060405180910390f35b348015610d3157600080fd5b50610d3a612537565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d7a578082015181840152602081019050610d5f565b50505050905090810190601f168015610da75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610dc157600080fd5b50610dee60048036036020811015610dd857600080fd5b81019080803590602001909291905050506125d6565b6040518082815260200191505060405180910390f35b348015610e1057600080fd5b50610e5360048036036020811015610e2757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125dd565b005b348015610e6157600080fd5b50610e6a6125fd565b005b348015610e7857600080fd5b50610ec560048036036040811015610e8f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612608565b604051808215151515815260200191505060405180910390f35b348015610eeb57600080fd5b50610ef461283f565b6040518082815260200191505060405180910390f35b348015610f1657600080fd5b50610f6360048036036040811015610f2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612846565b604051808215151515815260200191505060405180910390f35b348015610f8957600080fd5b50610f9261285d565b604051808215151515815260200191505060405180910390f35b348015610fb857600080fd5b50610ffb60048036036020811015610fcf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a25565b604051808215151515815260200191505060405180910390f35b34801561102157600080fd5b5061102a612a42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561107857600080fd5b50611081612a69565b6040518082815260200191505060405180910390f35b3480156110a357600080fd5b506110e6600480360360208110156110ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a70565b005b3480156110f457600080fd5b506111216004803603602081101561110b57600080fd5b8101908080359060200190929190505050612baf565b604051808215151515815260200191505060405180910390f35b34801561114757600080fd5b50611150612ca8565b6040518082815260200191505060405180910390f35b34801561117257600080fd5b506111d56004803603604081101561118957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612caf565b6040518082815260200191505060405180910390f35b3480156111f757600080fd5b50611200612d36565b6040518082815260200191505060405180910390f35b34801561122257600080fd5b5061124f6004803603602081101561123957600080fd5b8101908080359060200190929190505050612d3d565b6040518082815260200191505060405180910390f35b34801561127157600080fd5b5061127a612d52565b6040518082815260200191505060405180910390f35b34801561129c57600080fd5b506112a5612d59565b005b3480156112b357600080fd5b506112f6600480360360208110156112ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ec4565b6040518082815260200191505060405180910390f35b34801561131857600080fd5b50611321612f0e565b6040518082815260200191505060405180910390f35b34801561134357600080fd5b506113866004803603602081101561135a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f15565b005b34801561139457600080fd5b5061139d612f34565b6040518082815260200191505060405180910390f35b3480156113bf57600080fd5b506113c8612f3b565b6040518082815260200191505060405180910390f35b6101008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114755780601f1061144a57610100808354040283529160200191611475565b820191906000526020600020905b81548152906001019060200180831161145857829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156114ba57600080fd5b81603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b600061010d54905090565b60008261011654101515156115c957600080fd5b6000833361011860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182815260200193505050506040516020818303038152906040528051906020012090508060405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c0182815260200191505060405160208183030381529060405280519060200120905060006116dc8285612f42565b90508073ffffffffffffffffffffffffffffffffffffffff166116fd6124b5565b73ffffffffffffffffffffffffffffffffffffffff16141515611788576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436c61696d206e6f7420617574686f72697a656400000000000000000000000081525060200191505060405180910390fd5b600161011860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506117ed856101165461302690919063ffffffff16565b610116819055503073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561189757600080fd5b505af11580156118ab573d6000803e3d6000fd5b505050506040513d60208110156118c157600080fd5b81019080805190602001909291905050501515611946576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5472616e7366657220746f20636c61696d616e74206661696c6564000000000081525060200191505060405180910390fd5b60019250505092915050565b6101095481565b6000603554905090565b60006119f482603460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a7f848484613048565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b6000611b756124df565b1515611b8057600080fd5b610112548211151515611c21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f4e6f7420656e6f756768206375726174696f6e2072657761726473206176616981526020017f6c61626c6500000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611c37826101125461302690919063ffffffff16565b61011281905550611c54826101165461321890919063ffffffff16565b6101168190555060019050919050565b6101055481565b61010160009054906101000a900460ff1681565b600060019054906101000a900460ff1680611c9e5750611c9d613239565b5b80611cb557506000809054906101000a900460ff16155b1515611d4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611da03361324a565b611da933612a70565b8c6101009080519060200190611dc0929190613f62565b508b61010160006101000a81548160ff021916908360ff1602179055508a6101029080519060200190611df4929190613f62565b50896101039080519060200190611e0c929190613f62565b508861010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087610105819055508661010781905550856101088190555084610109819055508361010a819055508261010b819055504361010e819055506101055461010681905550600061010f8190555061010554610110819055508161010c81905550611eb78261343e565b5080600060016101000a81548160ff02191690831515021790555050505050505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611f1e57600080fd5b611fad82603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061212333612a25565b151561212e57600080fd5b6121388383613454565b6001905092915050565b6101075481565b61010e5481565b600061010f5461215e6115aa565b03905090565b600061216e6124df565b151561217957600080fd5b61010d5484101515612219576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f4c6173742072656c65617365206d757374206265206265666f7265206375727281526020017f656e7420726f756e64000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8361010f8190555082610110819055508161011181905550612258600f61224a6004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b61011281905550612286600f6122786004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b610113819055506122b4600f6122a66004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b6101148190555061010f5490509392505050565b6101038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561235f5780601f106123345761010080835404028352916020019161235f565b820191906000526020600020905b81548152906001019060200180831161234257829003601f168201915b505050505081565b61010b5481565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6123bf6124df565b15156123ca57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6101085481565b6101165481565b61010f5481565b61010d5481565b6101155481565b61010a5481565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6101028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125ce5780601f106125a3576101008083540402835291602001916125ce565b820191906000526020600020905b8154815290600101906020018083116125b157829003601f168201915b505050505081565b6000919050565b6125e633612a25565b15156125f157600080fd5b6125fa81613612565b50565b6126063361366c565b565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561264557600080fd5b6126d482603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6101065481565b6000612853338484613048565b6001905092915050565b600080600061286a6115aa565b90508061010f541015156128e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4e6f206e6577207265776172647320617661696c61626c65000000000000000081525060200191505060405180910390fd5b60006128fe61010f548361302690919063ffffffff16565b90506101095461010f5410151561293457600061011154905061292181836136c6565b935061292d3085612118565b505061298c565b6101095482101561294f5761294881613762565b925061298b565b6000612959613811565b9050600061296684613836565b905061297b818361321890919063ffffffff16565b94506129873082612118565b5050505b5b61299583613885565b61299d613974565b508161010f819055506129bc836101115461321890919063ffffffff16565b610111819055507f39c15e2884a29a8ddf54563c3cb131c46f3667ecc29b194be9f5cf91b2879725836101125461011354610115546040518085815260200184815260200183815260200182815260200194505050505060405180910390a16001935050505090565b6000612a3b82609b613b2490919063ffffffff16565b9050919050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101145481565b600060019054906101000a900460ff1680612a8f5750612a8e613239565b5b80612aa657506000809054906101000a900460ff16155b1515612b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612b9182613bb8565b80600060016101000a81548160ff0219169083151502179055505050565b6000612bb96124df565b1515612bc457600080fd5b610113548211151515612c65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f4e6f7420656e6f7567682061697264726f70207265776172647320617661696c81526020017f61626c650000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b612c7b826101135461302690919063ffffffff16565b61011381905550612c98826101175461321890919063ffffffff16565b6101178190555060019050919050565b6101105481565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61010c5481565b60008161010d8190555061010d549050919050565b6101115481565b6000612d8761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661236e565b90503073ffffffffffffffffffffffffffffffffffffffff166323b872dd61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610123846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015612e8557600080fd5b505af1158015612e99573d6000803e3d6000fd5b505050506040513d6020811015612eaf57600080fd5b81019080805190602001909291905050505050565b600061011860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101125481565b612f1d6124df565b1515612f2857600080fd5b612f3181613d07565b50565b6101175481565b6101135481565b60008060008060418551141515612f5f5760009350505050613020565b6020850151925060408501519150606085015160001a9050601b8160ff161015612f8a57601b810190505b601b8160ff1614158015612fa25750601c8160ff1614155b15612fb35760009350505050613020565b60018682858560405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015613010573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b600082821115151561303757600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561308457600080fd5b6130d681603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461302690919063ffffffff16565b603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061316b81603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015151561322f57600080fd5b8091505092915050565b600080303b90506000811491505090565b600060019054906101000a900460ff16806132695750613268613239565b5b8061328057506000809054906101000a900460ff16155b151561331a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548160ff0219169083151502179055505050565b600061344a3083612118565b5060019050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561349057600080fd5b6134a58160355461321890919063ffffffff16565b6035819055506134fd81603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461321890919063ffffffff16565b603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808314156135bd57600090506135e2565b600082840290508284828115156135d057fe5b041415156135dd57600080fd5b809150505b92915050565b600080821115156135f857600080fd5b6000828481151561360557fe5b0490508091505092915050565b61362681609b613e0390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61368081609b613eb390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600080839050600080600090505b8481101561375657600061371c61010160009054906101000a900460ff1660ff16600a0a61370e86610108546135aa90919063ffffffff16565b6135e890919063ffffffff16565b9050613731818461321890919063ffffffff16565b9250613746818561321890919063ffffffff16565b93505080806001019150506136d4565b50809250505092915050565b600080600061010f541415613778576101055490505b620186a083101561380757600080600090505b84811015613800576137d461010160009054906101000a900460ff1660ff16600a0a6137c66101105461010b546135aa90919063ffffffff16565b6135e890919063ffffffff16565b91506137e9828461321890919063ffffffff16565b92508161011081905550808060010191505061378b565b5050613808565b5b80915050919050565b60008061382d6101115461010c5461302690919063ffffffff16565b90508091505090565b60008061010c549050600061386a600161385c610109548761302690919063ffffffff16565b61321890919063ffffffff16565b9050600061387883836136c6565b9050809350505050919050565b60006138ae60056138a06004856135aa90919063ffffffff16565b6135e890919063ffffffff16565b90506138d96138c76003836135e890919063ffffffff16565b6101135461321890919063ffffffff16565b610113819055506139096138f76003836135e890919063ffffffff16565b6101125461321890919063ffffffff16565b610112819055506139396139276003836135e890919063ffffffff16565b6101145461321890919063ffffffff16565b610114819055506139696139576005846135e890919063ffffffff16565b6101155461321890919063ffffffff16565b610115819055505050565b60003073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610115546040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613a3f57600080fd5b505af1158015613a53573d6000803e3d6000fd5b505050506040513d6020811015613a6957600080fd5b81019080805190602001909291905050501515613b14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f5472616e7366657220746f2064657646756e6441646472657373206661696c6581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000610115819055506001905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515613b6157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600060019054906101000a900460ff1680613bd75750613bd6613239565b5b80613bee57506000809054906101000a900460ff16155b1515613c88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001807f436f6e747261637420696e7374616e63652068617320616c726561647920626581526020017f656e20696e697469616c697a656400000000000000000000000000000000000081525060400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550613cd982612a25565b1515613ce957613ce882613612565b5b80600060016101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613d4357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613e3f57600080fd5b613e498282613b24565b151515613e5557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515613eef57600080fd5b613ef98282613b24565b1515613f0457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613fa357805160ff1916838001178555613fd1565b82800160010185558215613fd1579182015b82811115613fd0578251825591602001919060010190613fb5565b5b509050613fde9190613fe2565b5090565b61400491905b80821115614000576000816000905550600101613fe8565b5090565b9056fea165627a7a72305820e06fd20792807dc4f8cb2b590b4242180733a92b8647f498d66dd373ed1d93450029",
  "sourceMap": "57:1532:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:1532:4;;;;;;;",
  "deployedSourceMap": "57:1532:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:18:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;673:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;673:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2796:238:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2796:238:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2796:238:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;214:143:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;214:143:4;;;;;;;;;;;;;;;;;;;;;;;12223:688:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12223:688:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12223:688:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12223:688:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12223:688:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12223:688:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;12223:688:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;935:26:3;;;;;;;;;;;;;;;;;;;;;;;997:89:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:89:10;;;;;;;;;;;;;;;;;;;;;;;3497:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3497:294:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3497:294:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11372:272:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11372:272:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11372:272:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;802:30:3;;;;;;;;;;;;;;;;;;;;;;;695:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3417:989;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3417:989:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3417:989:3;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3417:989:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3417:989:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3417:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3417:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3417:989:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3417:989:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3417:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3417:989:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3417:989:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3417:989:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3417:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3417:989:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4294:317:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4294:317:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4294:317:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:128:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:128:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;611:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:27:3;;;;;;;;;;;;;;;;;;;;;;;1136:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1136:25:3;;;;;;;;;;;;;;;;;;;;;;;13402:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13402:98:3;;;;;;;;;;;;;;;;;;;;;;;746:559:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:559:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;746:559:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;744:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:25:3;;;;;;;;;;;;;;;;;;;;;;;1295:104:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1295:104:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1295:104:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:137:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1438:137:9;;;;;;901:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;901:30:3;;;;;;;;;;;;;;;;;;;;;;;1968:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1968:31:3;;;;;;;;;;;;;;;;;;;;;;;1215:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1215:24:3;;;;;;;;;;;;;;;;;;;;;;;1055:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:27:3;;;;;;;;;;;;;;;;;;;;;;;1827:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1827:30:3;;;;;;;;;;;;;;;;;;;;;;;965:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;965:26:3;;;;;;;;;;;;;;;;;;;;;;;750:77:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;750:77:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1070:90:9;;;;;;;;;;;;;;;;;;;;;;;;;;;720:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;720:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;720:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10535:457;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10535:457:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10535:457:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:90:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;646:90:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:6;;;;;;;;;;;;;;;;;;;;;;742:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:75:6;;;;;;5119:327:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5119:327:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5119:327:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;836:30:3;;;;;;;;;;;;;;;;;;;;;;;2023:137:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:137:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2023:137:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4736:1730:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4736:1730:3;;;;;;;;;;;;;;;;;;;;;;;;;;;533:107:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;533:107:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1725:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1725:26:3;;;;;;;;;;;;;;;;;;;;;;;263:101:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:101:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;263:101:11;;;;;;;;;;;;;;;;;;;;;;11744:277:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11744:277:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11744:277:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1287:30:3;;;;;;;;;;;;;;;;;;;;;;;1730:129:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1730:129:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1730:129:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:27:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1024:27:3;;;;;;;;;;;;;;;;;;;;;;;492:125:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;492:125:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;492:125:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:28:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1411:28:3;;;;;;;;;;;;;;;;;;;;;;;1432:155:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1432:155:4;;;;;;13016:98:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13016:98:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13016:98:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1504:25:3;;;;;;;;;;;;;;;;;;;;;;;1746:107:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:107:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1746:107:9;;;;;;;;;;;;;;;;;;;;;;2090:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2090:32:3;;;;;;;;;;;;;;;;;;;;;;;1613:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:26:3;;;;;;;;;;;;;;;;;;;;;;;673:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2796:238:10:-;2861:4;2904:1;2885:21;;:7;:21;;;;2877:30;;;;;;;;2950:5;2918:8;:20;2927:10;2918:20;;;;;;;;;;;;;;;:29;2939:7;2918:29;;;;;;;;;;;;;;;:37;;;;2991:7;2970:36;;2979:10;2970:36;;;3000:5;2970:36;;;;;;;;;;;;;;;;;;3023:4;3016:11;;2796:238;;;;:::o;214:143:4:-;255:7;340:12;;333:19;;214:143;:::o;12223:688:3:-;12295:4;12379:7;12359:16;;:27;;12351:36;;;;;;;;12393:12;12435:7;12444:10;12456:6;:18;12463:10;12456:18;;;;;;;;;;;;;;;;12418:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12418:57:3;;;12408:68;;;;;;12393:83;;12552:4;12499:58;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12499:58:3;;;12489:69;;;;;;12482:76;;12624:16;12643:25;12657:4;12663;12643:13;:25::i;:::-;12624:44;;12693:8;12682:19;;:7;:5;:7::i;:::-;:19;;;12674:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12754:1;12732:6;:18;12739:10;12732:18;;;;;;;;;;;;;;;;:23;;;;;;;;;;;12780:29;12801:7;12780:16;;:20;;:29;;;;:::i;:::-;12761:16;:48;;;;12823:4;:13;;;12837:10;12849:7;12823:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12823:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12823:34:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12823:34:3;;;;;;;;;;;;;;;;12815:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12902:4;12895:11;;;;12223:688;;;;:::o;935:26::-;;;;:::o;997:89:10:-;1041:7;1067:12;;1060:19;;997:89;:::o;3497:294::-;3576:4;3621:37;3652:5;3621:8;:14;3630:4;3621:14;;;;;;;;;;;;;;;:26;3636:10;3621:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3592:8;:14;3601:4;3592:14;;;;;;;;;;;;;;;:26;3607:10;3592:26;;;;;;;;;;;;;;;:66;;;;3668:26;3678:4;3684:2;3688:5;3668:9;:26::i;:::-;3724:10;3709:54;;3718:4;3709:54;;;3736:8;:14;3745:4;3736:14;;;;;;;;;;;;;;;:26;3751:10;3736:26;;;;;;;;;;;;;;;;3709:54;;;;;;;;;;;;;;;;;;3780:4;3773:11;;3497:294;;;;;:::o;11372:272:3:-;11440:4;954:9:9;:7;:9::i;:::-;946:18;;;;;;;;11472:10:3;;11460:8;:22;;11452:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11543:24;11558:8;11543:10;;:14;;:24;;;;:::i;:::-;11530:10;:37;;;;11592:30;11613:8;11592:16;;:20;;:30;;;;:::i;:::-;11573:16;:49;;;;11635:4;11628:11;;11372:272;;;:::o;802:30::-;;;;:::o;695:21::-;;;;;;;;;;;;;:::o;3417:989::-;1024:12:13;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;3795:30:3;3814:10;3795:18;:30::i;:::-;3831:36;3856:10;3831:24;:36::i;:::-;3881:5;3874:4;:12;;;;;;;;;;;;:::i;:::-;;3903:9;3892:8;;:20;;;;;;;;;;;;;;;;;;3927:7;3918:6;:16;;;;;;;;;;;;:::i;:::-;;3950:8;3940:7;:18;;;;;;;;;;;;:::i;:::-;;3981:15;3964:14;;:32;;;;;;;;;;;;;;;;;;4020:16;4002:15;:34;;;;4057:13;4042:12;:28;;;;4094:16;4076:15;:34;;;;4130:12;4116:11;:26;;;;4162:12;4148:11;:26;;;;4193:11;4180:10;:24;;;;4224:12;4211:10;:25;;;;4260:15;;4242;:33;;;;4293:1;4281:9;:13;;;;4318:15;;4300;:33;;;;4354:13;4339:12;:28;;;;4373;4387:13;4373;:28::i;:::-;;1243:15:13;1228:12;;:30;;;;;;;;;;;;;;;;;;3417:989:3;;;;;;;;;;;;;:::o;4294:317:10:-;4374:4;4417:1;4398:21;;:7;:21;;;;4390:30;;;;;;;;4463:45;4497:10;4463:8;:20;4472:10;4463:20;;;;;;;;;;;;;;;:29;4484:7;4463:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4431:8;:20;4440:10;4431:20;;;;;;;;;;;;;;;:29;4452:7;4431:29;;;;;;;;;;;;;;;:77;;;;4544:7;4523:60;;4532:10;4523:60;;;4553:8;:20;4562:10;4553:20;;;;;;;;;;;;;;;:29;4574:7;4553:29;;;;;;;;;;;;;;;;4523:60;;;;;;;;;;;;;;;;;;4600:4;4593:11;;4294:317;;;;:::o;611:128:11:-;679:4;488:20:6;497:10;488:8;:20::i;:::-;480:29;;;;;;;;695:16:11;701:2;705:5;695;:16::i;:::-;728:4;721:11;;611:128;;;;:::o;870:27:3:-;;;;:::o;1136:25::-;;;;:::o;13402:98::-;13451:7;13486:9;;13473:10;:8;:10::i;:::-;:22;13466:29;;13402:98;:::o;746:559:4:-;863:7;954:9:9;:7;:9::i;:::-;946:18;;;;;;;;898:12:4;;886:9;:24;878:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;974:9;962;:21;;;;1007:16;989:15;:34;;;;1045:14;1029:13;:30;;;;1078:32;1104:5;1078:21;1097:1;1078:14;:18;;:21;;;;:::i;:::-;:25;;:32;;;;:::i;:::-;1065:10;:45;;;;1130:32;1156:5;1130:21;1149:1;1130:14;:18;;:21;;;;:::i;:::-;:25;;:32;;;;:::i;:::-;1116:11;:46;;;;1182:32;1208:5;1182:21;1201:1;1182:14;:18;;:21;;;;:::i;:::-;:25;;:32;;;;:::i;:::-;1168:11;:46;;;;1291:9;;1284:16;;746:559;;;;;:::o;744:21:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;995:25::-;;;;:::o;1295:104:10:-;1350:7;1376:9;:16;1386:5;1376:16;;;;;;;;;;;;;;;;1369:23;;1295:104;;;:::o;1438:137:9:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1536:1;1499:40;;1520:6;;;;;;;;;;;1499:40;;;;;;;;;;;;1566:1;1549:6;;:19;;;;;;;;;;;;;;;;;;1438:137::o;901:30:3:-;;;;:::o;1968:31::-;;;;:::o;1215:24::-;;;;:::o;1055:27::-;;;;:::o;1827:30::-;;;;:::o;965:26::-;;;;:::o;750:77:9:-;788:7;814:6;;;;;;;;;;;807:13;;750:77;:::o;1070:90::-;1110:4;1147:6;;;;;;;;;;;1133:20;;:10;:20;;;1126:27;;1070:90;:::o;720:20:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10535:457::-;10592:7;10535:457;;;:::o;646:90:6:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;5119:327:10:-;5204:4;5247:1;5228:21;;:7;:21;;;;5220:30;;;;;;;;5293:50;5327:15;5293:8;:20;5302:10;5293:20;;;;;;;;;;;;;;;:29;5314:7;5293:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5261:8;:20;5270:10;5261:20;;;;;;;;;;;;;;;:29;5282:7;5261:29;;;;;;;;;;;;;;;:82;;;;5379:7;5358:60;;5367:10;5358:60;;;5388:8;:20;5397:10;5388:20;;;;;;;;;;;;;;;:29;5409:7;5388:29;;;;;;;;;;;;;;;;5358:60;;;;;;;;;;;;;;;;;;5435:4;5428:11;;5119:327;;;;:::o;836:30:3:-;;;;:::o;2023:137:10:-;2084:4;2100:32;2110:10;2122:2;2126:5;2100:9;:32::i;:::-;2149:4;2142:11;;2023:137;;;;:::o;4736:1730:3:-;4777:4;4789:24;4819:20;4842:10;:8;:10::i;:::-;4819:33;;4878:12;4866:9;;:24;4858:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4974:20;4997:27;5014:9;;4997:12;:16;;:27;;;;:::i;:::-;4974:50;;5048:11;;5035:9;;:24;;5031:1026;;;5173:24;5200:13;;5173:40;;5240:57;5266:16;5284:12;5240:25;:57::i;:::-;5221:76;;5305:37;5318:4;5325:16;5305:4;:37::i;:::-;;5031:1026;;;;5449:11;;5434:12;:26;5430:621;;;5597:36;5620:12;5597:22;:36::i;:::-;5578:55;;5430:621;;;5783:27;5813;:25;:27::i;:::-;5783:57;;5850:27;5880:39;5906:12;5880:25;:39::i;:::-;5850:69;;5948:44;5972:19;5948;:23;;:44;;;;:::i;:::-;5929:63;;6002:40;6015:4;6022:19;6002:4;:40::i;:::-;;5430:621;;;5031:1026;6063:30;6076:16;6063:12;:30::i;:::-;6162:11;:9;:11::i;:::-;;6227:12;6215:9;:24;;;;6298:35;6316:16;6298:13;;:17;;:35;;;;:::i;:::-;6282:13;:51;;;;6376:68;6385:16;6403:10;;6415:11;;6428:15;;6376:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6457:4;6450:11;;;;;4736:1730;:::o;533:107:6:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;769:29:3:-;;;;;;;;;;;;;:::o;1725:26::-;;;;:::o;263:101:11:-;1024:12:13;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;328:29:11;350:6;328:21;:29::i;:::-;1243:15:13;1228:12;;:30;;;;;;;;;;;;;;;;;;263:101:11;;:::o;11744:277:3:-;11813:4;954:9:9;:7;:9::i;:::-;946:18;;;;;;;;11845:11:3;;11833:8;:23;;11825:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11917:25;11933:8;11917:11;;:15;;:25;;;;:::i;:::-;11903:11;:39;;;;11968:31;11990:8;11968:17;;:21;;:31;;;;:::i;:::-;11948:17;:51;;;;12012:4;12005:11;;11744:277;;;:::o;1287:30::-;;;;:::o;1730:129:10:-;1802:7;1828:8;:15;1837:5;1828:15;;;;;;;;;;;;;;;:24;1844:7;1828:24;;;;;;;;;;;;;;;;1821:31;;1730:129;;;;:::o;1024:27:3:-;;;;:::o;492:125:4:-;548:7;578:9;563:12;:24;;;;600:12;;593:19;;492:125;;;:::o;1411:28:3:-;;;;:::o;1432:155:4:-;1472:15;1490:25;1500:14;;;;;;;;;;;1490:9;:25::i;:::-;1472:43;;1521:4;:17;;;1539:14;;;;;;;;;;;1563:5;1571:10;1521:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1521:61:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1521:61:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1521:61:4;;;;;;;;;;;;;;;;;1432:155;:::o;13016:98:3:-;13071:7;13093:6;:16;13100:8;13093:16;;;;;;;;;;;;;;;;13086:23;;13016:98;;;:::o;1504:25::-;;;;:::o;1746:107:9:-;954:9;:7;:9::i;:::-;946:18;;;;;;;;1818:28;1837:8;1818:18;:28::i;:::-;1746:107;:::o;2090:32:3:-;;;;:::o;1613:26::-;;;;:::o;609:1026:7:-;687:7;706:9;725;744:7;824:2;804:9;:16;:22;;800:72;;;858:1;842:19;;;;;;;800:72;1166:4;1155:9;1151:20;1145:27;1140:32;;1211:4;1200:9;1196:20;1190:27;1185:32;;1264:4;1253:9;1249:20;1243:27;1240:1;1235:36;1230:41;;1390:2;1386:1;:6;;;1382:44;;;1413:2;1408:7;;;;1382:44;1508:2;1503:1;:7;;;;:18;;;;;1519:2;1514:1;:7;;;;1503:18;1499:130;;;1553:1;1537:19;;;;;;;1499:130;1594:24;1604:4;1610:1;1613;1616;1594:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1594:24:7;;;;;;;;1587:31;;;;;609:1026;;;;;:::o;1205:145:8:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;5660:256:10:-;5761:1;5747:16;;:2;:16;;;;5739:25;;;;;;;;5793:26;5813:5;5793:9;:15;5803:4;5793:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5775:9;:15;5785:4;5775:15;;;;;;;;;;;;;;;:44;;;;5845:24;5863:5;5845:9;:13;5855:2;5845:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5829:9;:13;5839:2;5829:13;;;;;;;;;;;;;;;:40;;;;5899:2;5884:25;;5893:4;5884:25;;;5903:5;5884:25;;;;;;;;;;;;;;;;;;5660:256;;;:::o;1431:145:8:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;1349:467:13:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;545:142:9:-;1024:12:13;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;619:6:9;610;;:15;;;;;;;;;;;;;;;;;;673:6;;;;;;;;;;;640:40;;669:1;640:40;;;;;;;;;;;;1243:15:13;1228:12;;:30;;;;;;;;;;;;;;;;;;545:142:9;;:::o;4520:128:3:-;4582:4;4594:32;4607:4;4614:11;4594:4;:32::i;:::-;;4639:4;4632:11;;4520:128;;;:::o;6259:263:10:-;6352:1;6333:21;;:7;:21;;;;6325:30;;;;;;;;6381:23;6398:5;6381:12;;:16;;:23;;;;:::i;:::-;6366:12;:38;;;;6435:29;6458:5;6435:9;:18;6445:7;6435:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6414:9;:18;6424:7;6414:18;;;;;;;;;;;;;;;:50;;;;6500:7;6479:36;;6496:1;6479:36;;;6509:5;6479:36;;;;;;;;;;;;;;;;;;6259:263;;:::o;229:421:8:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;;;:10;605:19;;;;;;;;642:1;635:8;;;229:421;;;;;:::o;778:296::-;836:7;933:1;929;:5;921:14;;;;;;;;945:9;961:1;957;:5;;;;;;;;945:17;;1066:1;1059:8;;;778:296;;;;:::o;823:119:6:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;948:127::-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;6742:486:3:-;6845:7;6860:19;6882:12;6860:34;;6900:24;6935:6;6944:1;6935:10;;6930:265;6951:13;6947:1;:17;6930:265;;;6979:25;7007:59;7056:8;;;;;;;;;;;7048:17;;7044:2;:21;7007:32;7027:11;7007:15;;:19;;:32;;;;:::i;:::-;:36;;:59;;;;:::i;:::-;6979:87;;7093:39;7114:17;7093:16;:20;;:39;;;;:::i;:::-;7074:58;;7154:34;7170:17;7154:11;:15;;:34;;;;:::i;:::-;7140:48;;6930:265;6966:3;;;;;;;6930:265;;;;7207:16;7200:23;;;;6742:486;;;;:::o;7370:1193::-;7443:7;7458:24;7613:1;7600:9;;:14;7596:69;;;7643:15;;7624:34;;7596:69;7690:6;7674:13;:22;7670:860;;;7953:19;7985:6;7994:1;7985:10;;7980:233;8001:13;7997:1;:17;7980:233;;;8045:58;8093:8;;;;;;;;;;;8085:17;;8081:2;:21;8045:31;8060:15;;8045:10;;:14;;:31;;;;:::i;:::-;:35;;:58;;;;:::i;:::-;8031:72;;8132:33;8153:11;8132:16;:20;;:33;;;;:::i;:::-;8113:52;;8193:11;8175:15;:29;;;;8016:3;;;;;;;7980:233;;;;7670:860;;;;;8542:16;8535:23;;;7370:1193;;;:::o;8696:183::-;8756:7;8771:32;8806:31;8823:13;;8806:12;;:16;;:31;;;;:::i;:::-;8771:66;;8850:24;8843:31;;;8696:183;:::o;9083:404::-;9164:7;9179:29;9211:12;;9179:44;;9229:33;9265:37;9300:1;9265:30;9283:11;;9265:13;:17;;:30;;;;:::i;:::-;:34;;:37;;;;:::i;:::-;9229:73;;9363:18;9384:75;9410:21;9433:25;9384;:75::i;:::-;9363:96;;9472:10;9465:17;;;;;9083:404;;;:::o;9683:681::-;9747:19;9769:31;9798:1;9769:24;9791:1;9769:17;:21;;:24;;;;:::i;:::-;:28;;:31;;;;:::i;:::-;9747:53;;9858:35;9874:18;9890:1;9874:11;:15;;:18;;;;:::i;:::-;9858:11;;:15;;:35;;;;:::i;:::-;9844:11;:49;;;;9912:34;9927:18;9943:1;9927:11;:15;;:18;;;;:::i;:::-;9912:10;;:14;;:34;;;;:::i;:::-;9899:10;:47;;;;9966:35;9982:18;9998:1;9982:11;:15;;:18;;;;:::i;:::-;9966:11;;:15;;:35;;;;:::i;:::-;9952:11;:49;;;;10278:45;10298:24;10320:1;10298:17;:21;;:24;;;;:::i;:::-;10278:15;;:19;;:45;;;;:::i;:::-;10260:15;:63;;;;9683:681;;:::o;11081:189::-;11119:4;11139;:13;;;11153:14;;;;;;;;;;;11169:15;;11139:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11139:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11139:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11139:46:3;;;;;;;;;;;;;;;;11131:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11247:1;11229:15;:19;;;;11261:4;11254:11;;11081:189;:::o;786:162:5:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;305:137:6:-;1024:12:13;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:6;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:13;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:6;;:::o;1997:183:9:-;2090:1;2070:22;;:8;:22;;;;2062:31;;;;;;;;2137:8;2108:38;;2129:6;;;;;;;;;;;2108:38;;;;;;;;;;;;2165:8;2156:6;;:17;;;;;;;;;;;;;;;;;;1997:183;:::o;259:181:5:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;57:1532:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../RelevantToken.sol\";\n\ncontract RelevantTokenMock is RelevantToken{\n  /**\n   * @dev Return current round number // using the state variable set by setRoundNum, for testing\n   */\n  function roundNum() public view returns (uint256) {\n    // return (block.number.sub(startBlock)).div(roundLength);\n    return currentRound;\n  }\n\n  /**\n   * @dev Artificially increases current round number // auxiliary function for testing (simulating block progression)\n   */\n  function setRoundNum(uint256 _roundNum) public returns (uint256) {\n    currentRound = _roundNum;\n    return currentRound;\n  }\n\n  /**\n   * @dev Artificially sets the last release round // auxiliary function for testing (simulating reward release)\n   */\n  function setLastRound(uint256 _roundNum, uint256 _lastRoundReward, uint256 _totalReleased) public onlyOwner returns (uint256) {\n    require(_roundNum < currentRound, \"Last release must be before current round\");\n    lastRound = _roundNum;\n    lastRoundReward = _lastRoundReward;\n    totalReleased = _totalReleased;\n    rewardFund = _totalReleased.mul(4).div(5 * 3);\n    airdropFund = _totalReleased.mul(4).div(5 * 3);\n    reserveFund = _totalReleased.mul(4).div(5 * 3);\n    // devFund is always 0 since it gets transferred right away\n    return lastRound;\n  }\n\n  /**\n   * @dev Artificially empties the devFund account of all accumulated tokens // auxiliary function for testing\n   */\n  function emptyDevBalance() public {\n    uint devBalance = balanceOf(devFundAddress);\n    this.transferFrom(devFundAddress, address(0x123), devBalance);\n  }\n}\n",
  "sourcePath": "/Users/acrudol/Documents/Code/Relevant/token/contracts/mocks/RelevantTokenMock.sol",
  "ast": {
    "absolutePath": "/Users/acrudol/Documents/Code/Relevant/token/contracts/mocks/RelevantTokenMock.sol",
    "exportedSymbols": {
      "RelevantTokenMock": [
        2433
      ]
    },
    "id": 2434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/acrudol/Documents/Code/Relevant/token/contracts/RelevantToken.sol",
        "file": "../RelevantToken.sol",
        "id": 2317,
        "nodeType": "ImportDirective",
        "scope": 2434,
        "sourceUnit": 2315,
        "src": "25:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2318,
              "name": "RelevantToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2314,
              "src": "87:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RelevantToken_$2314",
                "typeString": "contract RelevantToken"
              }
            },
            "id": 2319,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:4"
          }
        ],
        "contractDependencies": [
          2314,
          2646,
          2974,
          3413,
          3462,
          3531,
          3587
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2433,
        "linearizedBaseContracts": [
          2433,
          2314,
          3462,
          2646,
          2974,
          3413,
          3531,
          3587
        ],
        "name": "RelevantTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "264:93:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "currentRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "340:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "333:19:4"
                }
              ]
            },
            "documentation": "@dev Return current round number // using the state variable set by setRoundNum, for testing",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "roundNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:4"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "255:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "254:9:4"
            },
            "scope": 2433,
            "src": "214:143:4",
            "stateMutability": "view",
            "superFunction": 2302,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2340,
              "nodeType": "Block",
              "src": "557:60:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2334,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1597,
                      "src": "563:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2335,
                      "name": "_roundNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "578:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "563:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2337,
                  "nodeType": "ExpressionStatement",
                  "src": "563:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2338,
                    "name": "currentRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "600:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2333,
                  "id": 2339,
                  "nodeType": "Return",
                  "src": "593:19:4"
                }
              ]
            },
            "documentation": "@dev Artificially increases current round number // auxiliary function for testing (simulating block progression)",
            "id": 2341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoundNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "name": "_roundNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "513:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:19:4"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "548:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:9:4"
            },
            "scope": 2433,
            "src": "492:125:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2411,
              "nodeType": "Block",
              "src": "872:433:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2355,
                          "name": "_roundNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2343,
                          "src": "886:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2356,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1597,
                          "src": "898:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "886:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6173742072656c65617365206d757374206265206265666f72652063757272656e7420726f756e64",
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "912:43:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0471d70cf2a035f7f7b048b3897a5462a01824880c0baa08bf457fc278eb36bb",
                          "typeString": "literal_string \"Last release must be before current round\""
                        },
                        "value": "Last release must be before current round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0471d70cf2a035f7f7b048b3897a5462a01824880c0baa08bf457fc278eb36bb",
                          "typeString": "literal_string \"Last release must be before current round\""
                        }
                      ],
                      "id": 2354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3605,
                        3606
                      ],
                      "referencedDeclaration": 3606,
                      "src": "878:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2360,
                  "nodeType": "ExpressionStatement",
                  "src": "878:78:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2361,
                      "name": "lastRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1601,
                      "src": "962:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "_roundNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2343,
                      "src": "974:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "962:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2364,
                  "nodeType": "ExpressionStatement",
                  "src": "962:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2365,
                      "name": "lastRoundReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "989:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2366,
                      "name": "_lastRoundReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "1007:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "989:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2369,
                      "name": "totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1605,
                      "src": "1029:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2370,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2347,
                      "src": "1045:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1029:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2372,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2373,
                      "name": "rewardFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "1065:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1104:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1108:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1104:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1097:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2374,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1078:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1078:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1078:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1078:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1065:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:45:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2385,
                      "name": "airdropFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "1116:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1156:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1160:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1156:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1149:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2386,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1130:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1130:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1130:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1130:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1116:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2397,
                      "name": "reserveFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1611,
                      "src": "1168:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1208:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1212:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1208:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1201:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2398,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1182:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1182:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1182:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1182:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1182:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1168:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2408,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2409,
                    "name": "lastRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1601,
                    "src": "1291:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2353,
                  "id": 2410,
                  "nodeType": "Return",
                  "src": "1284:16:4"
                }
              ]
            },
            "documentation": "@dev Artificially sets the last release round // auxiliary function for testing (simulating reward release)",
            "id": 2412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2350,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2349,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2904,
                  "src": "844:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "844:9:4"
              }
            ],
            "name": "setLastRound",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "name": "_roundNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "768:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "name": "_lastRoundReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "787:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "name": "_totalReleased",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "813:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:69:4"
            },
            "returnParameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "863:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "862:9:4"
            },
            "scope": 2433,
            "src": "746:559:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2431,
              "nodeType": "Block",
              "src": "1466:121:4",
              "statements": [
                {
                  "assignments": [
                    2416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2416,
                      "name": "devBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2431,
                      "src": "1472:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2415,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2420,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "devFundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "1500:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2417,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "1490:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1472:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2424,
                        "name": "devFundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "1539:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3078313233",
                            "id": 2426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1563:5:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_291_by_1",
                              "typeString": "int_const 291"
                            },
                            "value": "0x123"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_291_by_1",
                              "typeString": "int_const 291"
                            }
                          ],
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1555:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1555:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "devBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "1571:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3641,
                        "src": "1521:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RelevantTokenMock_$2433",
                          "typeString": "contract RelevantTokenMock"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3138,
                      "src": "1521:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2430,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:61:4"
                }
              ]
            },
            "documentation": "@dev Artificially empties the devFund account of all accumulated tokens // auxiliary function for testing",
            "id": 2432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emptyDevBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:4"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:4"
            },
            "scope": 2433,
            "src": "1432:155:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2434,
        "src": "57:1532:4"
      }
    ],
    "src": "0:1590:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/acrudol/Documents/Code/Relevant/token/contracts/mocks/RelevantTokenMock.sol",
    "exportedSymbols": {
      "RelevantTokenMock": [
        2433
      ]
    },
    "id": 2434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2316,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/acrudol/Documents/Code/Relevant/token/contracts/RelevantToken.sol",
        "file": "../RelevantToken.sol",
        "id": 2317,
        "nodeType": "ImportDirective",
        "scope": 2434,
        "sourceUnit": 2315,
        "src": "25:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2318,
              "name": "RelevantToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2314,
              "src": "87:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RelevantToken_$2314",
                "typeString": "contract RelevantToken"
              }
            },
            "id": 2319,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:4"
          }
        ],
        "contractDependencies": [
          2314,
          2646,
          2974,
          3413,
          3462,
          3531,
          3587
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2433,
        "linearizedBaseContracts": [
          2433,
          2314,
          3462,
          2646,
          2974,
          3413,
          3531,
          3587
        ],
        "name": "RelevantTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2326,
              "nodeType": "Block",
              "src": "264:93:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2324,
                    "name": "currentRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "340:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2323,
                  "id": 2325,
                  "nodeType": "Return",
                  "src": "333:19:4"
                }
              ]
            },
            "documentation": "@dev Return current round number // using the state variable set by setRoundNum, for testing",
            "id": 2327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "roundNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:4"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2327,
                  "src": "255:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "254:9:4"
            },
            "scope": 2433,
            "src": "214:143:4",
            "stateMutability": "view",
            "superFunction": 2302,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2340,
              "nodeType": "Block",
              "src": "557:60:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2334,
                      "name": "currentRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1597,
                      "src": "563:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2335,
                      "name": "_roundNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "578:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "563:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2337,
                  "nodeType": "ExpressionStatement",
                  "src": "563:24:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2338,
                    "name": "currentRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "600:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2333,
                  "id": 2339,
                  "nodeType": "Return",
                  "src": "593:19:4"
                }
              ]
            },
            "documentation": "@dev Artificially increases current round number // auxiliary function for testing (simulating block progression)",
            "id": 2341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoundNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2329,
                  "name": "_roundNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "513:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "512:19:4"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "548:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "547:9:4"
            },
            "scope": 2433,
            "src": "492:125:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2411,
              "nodeType": "Block",
              "src": "872:433:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2355,
                          "name": "_roundNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2343,
                          "src": "886:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2356,
                          "name": "currentRound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1597,
                          "src": "898:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "886:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6173742072656c65617365206d757374206265206265666f72652063757272656e7420726f756e64",
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "912:43:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0471d70cf2a035f7f7b048b3897a5462a01824880c0baa08bf457fc278eb36bb",
                          "typeString": "literal_string \"Last release must be before current round\""
                        },
                        "value": "Last release must be before current round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0471d70cf2a035f7f7b048b3897a5462a01824880c0baa08bf457fc278eb36bb",
                          "typeString": "literal_string \"Last release must be before current round\""
                        }
                      ],
                      "id": 2354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3605,
                        3606
                      ],
                      "referencedDeclaration": 3606,
                      "src": "878:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:78:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2360,
                  "nodeType": "ExpressionStatement",
                  "src": "878:78:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2361,
                      "name": "lastRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1601,
                      "src": "962:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2362,
                      "name": "_roundNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2343,
                      "src": "974:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "962:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2364,
                  "nodeType": "ExpressionStatement",
                  "src": "962:21:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2365,
                      "name": "lastRoundReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "989:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2366,
                      "name": "_lastRoundReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "1007:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "989:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "989:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2369,
                      "name": "totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1605,
                      "src": "1029:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2370,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2347,
                      "src": "1045:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1029:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2372,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2373,
                      "name": "rewardFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "1065:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1104:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1108:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1104:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1097:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2374,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1078:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1078:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1078:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1078:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1065:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:45:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2385,
                      "name": "airdropFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "1116:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1156:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1160:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1156:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1149:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2386,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1130:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1130:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1130:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1130:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1116:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2397,
                      "name": "reserveFund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1611,
                      "src": "1168:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "35",
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1208:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1212:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1208:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "34",
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1201:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2398,
                              "name": "_totalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2347,
                              "src": "1182:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2762,
                            "src": "1182:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1182:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2786,
                        "src": "1182:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1182:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1168:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2408,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:46:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2409,
                    "name": "lastRound",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1601,
                    "src": "1291:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2353,
                  "id": 2410,
                  "nodeType": "Return",
                  "src": "1284:16:4"
                }
              ]
            },
            "documentation": "@dev Artificially sets the last release round // auxiliary function for testing (simulating reward release)",
            "id": 2412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2350,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2349,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2904,
                  "src": "844:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "844:9:4"
              }
            ],
            "name": "setLastRound",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "name": "_roundNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "768:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "name": "_lastRoundReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "787:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2347,
                  "name": "_totalReleased",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "813:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "767:69:4"
            },
            "returnParameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2412,
                  "src": "863:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "862:9:4"
            },
            "scope": 2433,
            "src": "746:559:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2431,
              "nodeType": "Block",
              "src": "1466:121:4",
              "statements": [
                {
                  "assignments": [
                    2416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2416,
                      "name": "devBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2431,
                      "src": "1472:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2415,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2420,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "devFundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "1500:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2417,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3018,
                      "src": "1490:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1472:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2424,
                        "name": "devFundAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "1539:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3078313233",
                            "id": 2426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1563:5:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_291_by_1",
                              "typeString": "int_const 291"
                            },
                            "value": "0x123"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_291_by_1",
                              "typeString": "int_const 291"
                            }
                          ],
                          "id": 2425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1555:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1555:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2428,
                        "name": "devBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "1571:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2421,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3641,
                        "src": "1521:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RelevantTokenMock_$2433",
                          "typeString": "contract RelevantTokenMock"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3138,
                      "src": "1521:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:61:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2430,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:61:4"
                }
              ]
            },
            "documentation": "@dev Artificially empties the devFund account of all accumulated tokens // auxiliary function for testing",
            "id": 2432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emptyDevBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:4"
            },
            "returnParameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:4"
            },
            "scope": 2433,
            "src": "1432:155:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2434,
        "src": "57:1532:4"
      }
    ],
    "src": "0:1590:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-05-18T08:47:04.969Z",
  "devdoc": {
    "methods": {
      "allocateAirdrops(uint256)": {
        "details": "Allocate airdrop rewards",
        "params": {
          "_rewards": "to be reserved for user claims"
        }
      },
      "allocateRewards(uint256)": {
        "details": "Allocate curation rewards",
        "params": {
          "_rewards": "to be reserved for users claims"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "claimTokens(uint256,bytes)": {
        "details": "Claim curation reward tokens (to be called by user)",
        "params": {
          "_amount": "amount to be transferred to user",
          "_sig": "Signature by contract owner authorizing the transaction"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "emptyDevBalance()": {
        "details": "Artificially empties the devFund account of all accumulated tokens // auxiliary function for testing"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "initialize(string,uint8,string,string,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "ContPreInflationaryToken constructor",
        "params": {
          "_devFundAddress": "Address that receives and manages newly minted tokens for development fund",
          "_initRoundReward": "Number of released inflationary tokens per round during the first round",
          "_roundDecay": "Decay factor for the reward reduction during one round - can be calculated from timeConstant and roundLength",
          "_roundLength": "Number of blocks that make up an inflation release round",
          "_targetInflation": "Target inflation rate per round at which the reward decay should stop - can be calculated from target yearly inflation rate",
          "_targetRound": "Number of round from which inflation stays constant - can be calculated from timeConstant, initRoundReward and targetInflation",
          "_timeConstant": "Number of blocks after which reward reduces to 37% of initial value during exponential decay - can be calculated from half-life",
          "_totalPremint": "Rewards that are preminted (all until decay stops) - can be calculated from timeConstant, initRoundReward and targetInflation"
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "nonceOf(address)": {
        "details": "Nonce of user",
        "params": {
          "_account": "User account address"
        },
        "return": "nonce of user"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "partialSum(uint256)": {
        "details": "Calculates total number of tokens to be minted during the decay phase until _round",
        "params": {
          "_round": "Round until which the partial sum is taken"
        }
      },
      "releaseTokens()": {
        "details": "Compute and release currently releasable inflationary rewards"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "roundNum()": {
        "details": "Return current round number // using the state variable set by setRoundNum, for testing"
      },
      "roundsSincleLast()": {
        "details": "Return rounds since last release"
      },
      "setLastRound(uint256,uint256,uint256)": {
        "details": "Artificially sets the last release round // auxiliary function for testing (simulating reward release)"
      },
      "setRoundNum(uint256)": {
        "details": "Artificially increases current round number // auxiliary function for testing (simulating block progression)"
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}